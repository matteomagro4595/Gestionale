version: '3.8'

services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: gestionale_db
    environment:
      POSTGRES_USER: gestionale
      POSTGRES_PASSWORD: gestionale_password
      POSTGRES_DB: gestionale_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gestionale_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gestionale"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Python (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestionale_backend
    environment:
      DATABASE_URL: postgresql://gestionale:gestionale_password@postgres:5432/gestionale_db
      SECRET_KEY: your-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gestionale_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Node.js (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gestionale_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - gestionale_network
    stdin_open: true
    tty: true

networks:
  gestionale_network:
    driver: bridge

volumes:
  postgres_data:
